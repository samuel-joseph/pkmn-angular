{"ast":null,"code":"import { getMove, getStats, getTypes } from \"./pokemon-helper\";\nimport { regionPokemonsImage, region } from \"./region-helper\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/pokemon/pokemon.service\";\nclass Pokemon {\n  constructor(http) {\n    this.http = http;\n    this.regionPokemons = [];\n  }\n  getPokemonRegion() {\n    const regionSpecific = 'kanto';\n    const firstPokemon = region[regionSpecific].firstPokemon;\n    const lastPokemon = region[regionSpecific].lastPokemon;\n    console.log(\"in getPokemonRegion\");\n    for (let i = firstPokemon; i <= lastPokemon; i++) {\n      this.regionPokemons.push(regionPokemonsImage(`${i}`));\n    }\n    return this.regionPokemons;\n  }\n}\nPokemon.ɵfac = function Pokemon_Factory(t) {\n  return new (t || Pokemon)(i0.ɵɵinject(i1.PokemonService));\n};\nPokemon.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Pokemon,\n  factory: Pokemon.ɵfac,\n  providedIn: 'root'\n});\nexport { Pokemon };\nthis.http.getPokemon(id).subscribe(data => {\n  let tempMove = [];\n  let tempArr = [];\n  // move to a separate method\n  for (const moveIndex of data.moves) {\n    let moveDetails = moveIndex.version_group_details[0];\n    if (moveDetails.move_learn_method.name === \"level-up\" && moveDetails.level_learned_at >= 15) this.http.getPokemonMove(`${moveIndex.move.url}`).subscribe(move => {\n      let tempObj = getMove(move);\n      if (tempObj.power) {\n        tempMove.push(tempObj);\n      }\n    });\n  }\n  for (let i = 0; i < 6; i++) {\n    let tempObj = getStats(data.stats[i]);\n    tempArr.push(tempObj);\n  }\n  //move to a separate method\n  this.pokemon = {\n    id: data.id,\n    name: data.name,\n    stats: tempArr,\n    types: getTypes(data.types),\n    moves: tempMove,\n    front_image: data.sprites.front_default,\n    back_image: data.sprites.back_default\n  };\n  return this.pokemon;\n});","map":{"version":3,"names":["getMove","getStats","getTypes","regionPokemonsImage","region","Pokemon","constructor","http","regionPokemons","getPokemonRegion","regionSpecific","firstPokemon","lastPokemon","console","log","i","push","i0","ɵɵinject","i1","PokemonService","factory","ɵfac","providedIn","getPokemon","id","subscribe","data","tempMove","tempArr","moveIndex","moves","moveDetails","version_group_details","move_learn_method","name","level_learned_at","getPokemonMove","move","url","tempObj","power","stats","pokemon","types","front_image","sprites","front_default","back_image","back_default"],"sources":["/Users/joe/Desktop/newProject2023/pkmn-angular/pkmn-angular/src/app/helper/pokemon.class.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport { PokemonService } from \"../_services/pokemon/pokemon.service\"\nimport { PokemonModel, RegionPokemon } from \"../model/pokemon-model.model\"\nimport { getMove, getStats, getTypes\n} from \"./pokemon-helper\"\nimport { regionPokemonsImage, region } from \"./region-helper\"\n \n\n @Injectable({ providedIn: 'root' })\n export class Pokemon {\n  pokemon: PokemonModel\n  regionPokemons: RegionPokemon[] = [];\n   constructor(private http: PokemonService) { }\n\n   getPokemonRegion():any{\n     const regionSpecific = 'kanto'\n     const firstPokemon = region[regionSpecific].firstPokemon\n     const lastPokemon = region[regionSpecific].lastPokemon\n    console.log(\"in getPokemonRegion\")\n     for (let i = firstPokemon; i <= lastPokemon; i++){\n       this.regionPokemons.push(regionPokemonsImage(`${i}`))\n     }\n     return this.regionPokemons\n   }\n   \n   getPokemonDetails(id: string): <PokemonModel> {\n      this.http.getPokemon(id).subscribe(data => {\n        let tempMove: any[] = []\n        let tempArr = []\n    \n        // move to a separate method\n        for (const moveIndex of data.moves) {\n          let moveDetails = moveIndex.version_group_details[0]\n          if (moveDetails.move_learn_method.name === \"level-up\" &&\n              moveDetails.level_learned_at>=15\n          )\n            this.http.getPokemonMove(`${moveIndex.move.url}`).subscribe(move => {\n              let tempObj = getMove(move)\n              if(tempObj.power){\n                tempMove.push(tempObj)\n              }\n            })\n        }\n\n        for (let i = 0; i < 6; i++){\n          let tempObj = getStats(data.stats[i])\n          tempArr.push(tempObj)\n        }\n        //move to a separate method\n        this.pokemon = {\n          id: data.id,\n          name: data.name,\n          stats: tempArr,\n          types: getTypes(data.types),\n          moves: tempMove,\n          front_image: data.sprites.front_default,\n          back_image: data.sprites.back_default\n        }\n          return this.pokemon\n      })\n  }\n}\n"],"mappings":"AAGA,SAASA,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,QAC7B,kBAAkB;AACzB,SAASC,mBAAmB,EAAEC,MAAM,QAAQ,iBAAiB;;;AAG5D,MACaC,OAAO;EAGlBC,YAAoBC,IAAoB;IAApB,KAAAA,IAAI,GAAJA,IAAI;IADzB,KAAAC,cAAc,GAAoB,EAAE;EACS;EAE5CC,gBAAgBA,CAAA;IACd,MAAMC,cAAc,GAAG,OAAO;IAC9B,MAAMC,YAAY,GAAGP,MAAM,CAACM,cAAc,CAAC,CAACC,YAAY;IACxD,MAAMC,WAAW,GAAGR,MAAM,CAACM,cAAc,CAAC,CAACE,WAAW;IACvDC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IACjC,KAAK,IAAIC,CAAC,GAAGJ,YAAY,EAAEI,CAAC,IAAIH,WAAW,EAAEG,CAAC,EAAE,EAAC;MAC/C,IAAI,CAACP,cAAc,CAACQ,IAAI,CAACb,mBAAmB,CAAC,GAAGY,CAAC,EAAE,CAAC,CAAC;;IAEvD,OAAO,IAAI,CAACP,cAAc;EAC5B;;AAdWH,OAAO,C;mBAAPA,OAAO,EAAAY,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAPf,OAAO,C;SAAPA,OAAO;EAAAgB,OAAA,EAAPhB,OAAO,CAAAiB,IAAA;EAAAC,UAAA,EADM;AAAM;SACnBlB,OAAO;AAiBf,IAAI,CAACE,IAAI,CAACiB,UAAU,CAACC,EAAE,CAAC,CAACC,SAAS,CAACC,IAAI,IAAG;EACxC,IAAIC,QAAQ,GAAU,EAAE;EACxB,IAAIC,OAAO,GAAG,EAAE;EAEhB;EACA,KAAK,MAAMC,SAAS,IAAIH,IAAI,CAACI,KAAK,EAAE;IAClC,IAAIC,WAAW,GAAGF,SAAS,CAACG,qBAAqB,CAAC,CAAC,CAAC;IACpD,IAAID,WAAW,CAACE,iBAAiB,CAACC,IAAI,KAAK,UAAU,IACjDH,WAAW,CAACI,gBAAgB,IAAE,EAAE,EAElC,IAAI,CAAC7B,IAAI,CAAC8B,cAAc,CAAC,GAAGP,SAAS,CAACQ,IAAI,CAACC,GAAG,EAAE,CAAC,CAACb,SAAS,CAACY,IAAI,IAAG;MACjE,IAAIE,OAAO,GAAGxC,OAAO,CAACsC,IAAI,CAAC;MAC3B,IAAGE,OAAO,CAACC,KAAK,EAAC;QACfb,QAAQ,CAACZ,IAAI,CAACwB,OAAO,CAAC;;IAE1B,CAAC,CAAC;;EAGN,KAAK,IAAIzB,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;IACzB,IAAIyB,OAAO,GAAGvC,QAAQ,CAAC0B,IAAI,CAACe,KAAK,CAAC3B,CAAC,CAAC,CAAC;IACrCc,OAAO,CAACb,IAAI,CAACwB,OAAO,CAAC;;EAEvB;EACA,IAAI,CAACG,OAAO,GAAG;IACblB,EAAE,EAAEE,IAAI,CAACF,EAAE;IACXU,IAAI,EAAER,IAAI,CAACQ,IAAI;IACfO,KAAK,EAAEb,OAAO;IACde,KAAK,EAAE1C,QAAQ,CAACyB,IAAI,CAACiB,KAAK,CAAC;IAC3Bb,KAAK,EAAEH,QAAQ;IACfiB,WAAW,EAAElB,IAAI,CAACmB,OAAO,CAACC,aAAa;IACvCC,UAAU,EAAErB,IAAI,CAACmB,OAAO,CAACG;GAC1B;EACC,OAAO,IAAI,CAACN,OAAO;AACvB,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}