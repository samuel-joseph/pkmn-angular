{"ast":null,"code":"export const getMove = moves => {\n  let arr = [];\n  for (let move of moves) {\n    let tempObj = {};\n    if (move.power) {\n      tempObj = {\n        id: move.id,\n        name: move.name,\n        power: move.power,\n        pp: move.pp,\n        type: move.type.name,\n        accuracy: move.accuracy,\n        damageClass: move.damage_class.name,\n        priority: move.priority,\n        hits: move.meta ? {\n          max_hits: move.meta.max_hits,\n          min_hits: move.meta.min_hits\n        } : {\n          max_hits: 0,\n          min_hits: 0\n        },\n        crit_rate: move.meta ? move.meta.crit_rate : 0\n      };\n    }\n  }\n  return;\n};\nexport const getStats = stats => {\n  let arr = [];\n  for (let stat of stats) {\n    let tempObj = {};\n    tempObj = {\n      base_stat: stat.base_stat,\n      name: stat.stat.name\n    };\n    arr.push(tempObj);\n  }\n  return arr;\n};\nexport const getTypes = type => {\n  return type.length > 1 ? {\n    typeOne: type[0].type.name,\n    typeTwo: type[1].type.name\n  } : {\n    typeOne: type[0].type.name\n  };\n};","map":{"version":3,"names":["getMove","moves","arr","move","tempObj","power","id","name","pp","type","accuracy","damageClass","damage_class","priority","hits","meta","max_hits","min_hits","crit_rate","getStats","stats","stat","base_stat","push","getTypes","length","typeOne","typeTwo"],"sources":["/Users/joe/Desktop/newProject2023/pkmn-angular/pkmn-angular/src/app/helper/pokemon-helper.ts"],"sourcesContent":["export const getMove = (moves: Array<any>) => {\n  let arr = []\n  for (let move of moves) {\n    let tempObj = {}\n    if(move.power){\n      tempObj = {\n        id: move.id,\n        name: move.name,\n        power: move.power,\n        pp: move.pp,\n        type: move.type.name,\n        accuracy: move.accuracy,\n        damageClass: move.damage_class.name,\n        priority: move.priority,\n        hits: move.meta?{\n          max_hits: move.meta.max_hits,\n          min_hits: move.meta.min_hits\n        } : {\n          max_hits: 0,\n          min_hits: 0\n          },\n        crit_rate: move.meta? move.meta.crit_rate : 0\n      }\n    }\n  }\n  return \n}\n\nexport const getStats = (stats: Array<any>) => {\n  let arr = []\n  for (let stat of stats) {\n    let tempObj = {}\n    tempObj = {\n      base_stat: stat.base_stat,\n      name: stat.stat.name\n    }\n    arr.push(tempObj)\n  }\n  return arr\n}\n\nexport const getTypes = (type: any) => {\n  return type.length > 1 ? {\n    typeOne: type[0].type.name,\n    typeTwo: type[1].type.name\n  } : {\n    typeOne: type[0].type.name\n  }\n}"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAIC,KAAiB,IAAI;EAC3C,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIC,IAAI,IAAIF,KAAK,EAAE;IACtB,IAAIG,OAAO,GAAG,EAAE;IAChB,IAAGD,IAAI,CAACE,KAAK,EAAC;MACZD,OAAO,GAAG;QACRE,EAAE,EAAEH,IAAI,CAACG,EAAE;QACXC,IAAI,EAAEJ,IAAI,CAACI,IAAI;QACfF,KAAK,EAAEF,IAAI,CAACE,KAAK;QACjBG,EAAE,EAAEL,IAAI,CAACK,EAAE;QACXC,IAAI,EAAEN,IAAI,CAACM,IAAI,CAACF,IAAI;QACpBG,QAAQ,EAAEP,IAAI,CAACO,QAAQ;QACvBC,WAAW,EAAER,IAAI,CAACS,YAAY,CAACL,IAAI;QACnCM,QAAQ,EAAEV,IAAI,CAACU,QAAQ;QACvBC,IAAI,EAAEX,IAAI,CAACY,IAAI,GAAC;UACdC,QAAQ,EAAEb,IAAI,CAACY,IAAI,CAACC,QAAQ;UAC5BC,QAAQ,EAAEd,IAAI,CAACY,IAAI,CAACE;SACrB,GAAG;UACFD,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE;SACT;QACHC,SAAS,EAAEf,IAAI,CAACY,IAAI,GAAEZ,IAAI,CAACY,IAAI,CAACG,SAAS,GAAG;OAC7C;;;EAGL;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIC,KAAiB,IAAI;EAC5C,IAAIlB,GAAG,GAAG,EAAE;EACZ,KAAK,IAAImB,IAAI,IAAID,KAAK,EAAE;IACtB,IAAIhB,OAAO,GAAG,EAAE;IAChBA,OAAO,GAAG;MACRkB,SAAS,EAAED,IAAI,CAACC,SAAS;MACzBf,IAAI,EAAEc,IAAI,CAACA,IAAI,CAACd;KACjB;IACDL,GAAG,CAACqB,IAAI,CAACnB,OAAO,CAAC;;EAEnB,OAAOF,GAAG;AACZ,CAAC;AAED,OAAO,MAAMsB,QAAQ,GAAIf,IAAS,IAAI;EACpC,OAAOA,IAAI,CAACgB,MAAM,GAAG,CAAC,GAAG;IACvBC,OAAO,EAAEjB,IAAI,CAAC,CAAC,CAAC,CAACA,IAAI,CAACF,IAAI;IAC1BoB,OAAO,EAAElB,IAAI,CAAC,CAAC,CAAC,CAACA,IAAI,CAACF;GACvB,GAAG;IACFmB,OAAO,EAAEjB,IAAI,CAAC,CAAC,CAAC,CAACA,IAAI,CAACF;GACvB;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}