{"ast":null,"code":"import { map, throwError } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst POKEMON_API = 'https://pokeapi.co/api/v2/pokemon/';\nconst kanto = 151;\nclass PokemonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPokemon(id) {\n    this.http.get(`${POKEMON_API}${id}`).pipe(map(res => {\n      const pokemon = {\n        id: res.id,\n        name: res.name,\n        stats: {\n          base_stat: res.base_stat,\n          name: res.name\n        },\n        types: {\n          typeOne: res,\n          typeTwo: string\n        },\n        moves: Array,\n        front_image: string,\n        back_image: string\n      };\n      return pokemon;\n    })).subscribe(res => {\n      console.log(res);\n      return res;\n    });\n  }\n  getPokemonMove(MOVE_API) {\n    return this.http.get(`${MOVE_API}`);\n  }\n  handleError(error) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(() => {\n      return errorMessage;\n    });\n  }\n}\nPokemonService.ɵfac = function PokemonService_Factory(t) {\n  return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n};\nPokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PokemonService,\n  factory: PokemonService.ɵfac,\n  providedIn: 'root'\n});\nexport { PokemonService };","map":{"version":3,"names":["map","throwError","POKEMON_API","kanto","PokemonService","constructor","http","getPokemon","id","get","pipe","res","pokemon","name","stats","base_stat","types","typeOne","typeTwo","string","moves","Array","front_image","back_image","subscribe","console","log","getPokemonMove","MOVE_API","handleError","error","errorMessage","ErrorEvent","message","status","window","alert","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/joe/Desktop/newProject2023/pkmn-angular/pkmn-angular/src/app/_services/pokemon/pokemon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, catchError, map, retry, throwError } from 'rxjs';\nimport { PokemonModel, StatsModel } from 'src/app/model/pokemon-model.model';\nimport { MoveModel } from 'src/app/model/move-model.model';\nimport { getStats, } from 'src/app/helper/pokemon-helper';\n\nconst POKEMON_API = 'https://pokeapi.co/api/v2/pokemon/';\nconst kanto = 151\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokemonService {\n\n  constructor(private http: HttpClient) { }\n\n  getPokemon(id: string): any{\n    this.http.get<any>(`${POKEMON_API}${id}`)\n      .pipe(map((res) => {\n        const pokemon = {\n          id: res.id,\n          name: res.name,\n          stats: {\n            base_stat: res.base_stat,\n            name: res.name\n          },\n          types: {\n            typeOne: res,\n            typeTwo?: string\n          },\n          moves: Array<MoveModel>, \n          front_image: string,\n          back_image: string\n        }\n        return pokemon\n      }))\n      .subscribe((res) => {\n        console.log(res)\n        return res\n    })\n  }\n\n  getPokemonMove(MOVE_API: string): Observable<any>{\n    return this.http.get(`${MOVE_API}`)\n  }\n\n  handleError(error: any) {\n    let errorMessage = '';\n    if (error.error instanceof ErrorEvent) {\n      // Get client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Get server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    window.alert(errorMessage);\n    return throwError(() => {\n      return errorMessage;\n    });\n  }\n}\n"],"mappings":"AAEA,SAAiCA,GAAG,EAASC,UAAU,QAAQ,MAAM;;;AAKrE,MAAMC,WAAW,GAAG,oCAAoC;AACxD,MAAMC,KAAK,GAAG,GAAG;AAEjB,MAGaC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,UAAUA,CAACC,EAAU;IACnB,IAAI,CAACF,IAAI,CAACG,GAAG,CAAM,GAAGP,WAAW,GAAGM,EAAE,EAAE,CAAC,CACtCE,IAAI,CAACV,GAAG,CAAEW,GAAG,IAAI;MAChB,MAAMC,OAAO,GAAG;QACdJ,EAAE,EAAEG,GAAG,CAACH,EAAE;QACVK,IAAI,EAAEF,GAAG,CAACE,IAAI;QACdC,KAAK,EAAE;UACLC,SAAS,EAAEJ,GAAG,CAACI,SAAS;UACxBF,IAAI,EAAEF,GAAG,CAACE;SACX;QACDG,KAAK,EAAE;UACLC,OAAO,EAAEN,GAAG;UACZO,OAAO,EAAGC;SACX;QACDC,KAAK,EAAEC,KAAgB;QACvBC,WAAW,EAAEH,MAAM;QACnBI,UAAU,EAAEJ;OACb;MACD,OAAOP,OAAO;IAChB,CAAC,CAAC,CAAC,CACFY,SAAS,CAAEb,GAAG,IAAI;MACjBc,OAAO,CAACC,GAAG,CAACf,GAAG,CAAC;MAChB,OAAOA,GAAG;IACd,CAAC,CAAC;EACJ;EAEAgB,cAAcA,CAACC,QAAgB;IAC7B,OAAO,IAAI,CAACtB,IAAI,CAACG,GAAG,CAAC,GAAGmB,QAAQ,EAAE,CAAC;EACrC;EAEAC,WAAWA,CAACC,KAAU;IACpB,IAAIC,YAAY,GAAG,EAAE;IACrB,IAAID,KAAK,CAACA,KAAK,YAAYE,UAAU,EAAE;MACrC;MACAD,YAAY,GAAGD,KAAK,CAACA,KAAK,CAACG,OAAO;KACnC,MAAM;MACL;MACAF,YAAY,GAAG,eAAeD,KAAK,CAACI,MAAM,cAAcJ,KAAK,CAACG,OAAO,EAAE;;IAEzEE,MAAM,CAACC,KAAK,CAACL,YAAY,CAAC;IAC1B,OAAO9B,UAAU,CAAC,MAAK;MACrB,OAAO8B,YAAY;IACrB,CAAC,CAAC;EACJ;;AA/CW3B,cAAc,C;mBAAdA,cAAc,EAAAiC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdpC,cAAc,C;SAAdA,cAAc;EAAAqC,OAAA,EAAdrC,cAAc,CAAAsC,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEPvC,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}