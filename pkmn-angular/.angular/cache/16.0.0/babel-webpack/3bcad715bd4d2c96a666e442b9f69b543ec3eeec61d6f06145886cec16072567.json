{"ast":null,"code":"import { getStats, getTypes } from '../helper/pokemon-helper';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/pokemon/pokemon.service\";\nimport * as i2 from \"../helper/pokemon.class\";\nclass PlayerComponent {\n  constructor(http, pokemonService) {\n    this.http = http;\n    this.pokemonService = pokemonService;\n  }\n  // myPokemons: PokemonModel[] = []\n  ngOnInit() {\n    for (let pokemon of this.moveListArr) {\n      this.http.getPokemonMove(`${pokemon}`).subscribe(move => {\n        this.dbMoves.push({\n          id: move.id,\n          name: move.name,\n          power: move.power,\n          pp: move.pp,\n          type: move.type.name,\n          accuracy: move.accuracy,\n          damageClass: move.damage_class.name,\n          priority: move.priority,\n          hits: {\n            min_hits: move.meta.min_hits != null ? move.meta.min_hits : undefined,\n            max_hits: move.meta.max_hits != null ? move.meta.max_hits : undefined\n          },\n          crit_rate: move.meta.crit_rate\n        });\n      });\n    }\n  }\n  getRegion(region) {\n    let copyRegionPokemons = this.pokemonService.getPokemonRegion(region);\n    console.log(copyRegionPokemons);\n    this.regionPokemons = copyRegionPokemons;\n  }\n  chosenPokemon(id) {\n    this.pokemon = this.http.getPokemon(id).subscribe(data => {\n      this.pokemon = data;\n      this.myPokemons.push(data);\n      if (this.myPokemons.length == 6) {\n        this.toStore();\n      }\n    });\n  }\n  removePokemon(id) {\n    let copyMyPokemons = this.myPokemons.filter(pokemon => {\n      return pokemon.id != id;\n    });\n    this.myPokemons = copyMyPokemons;\n  }\n  toStore() {\n    let tempArr = [];\n    for (const myPokemon of this.myPokemons) {\n      let tempArrMoves = [];\n      for (const move of myPokemon.moves) {\n        let url = move.move.url;\n        let learnMethod = move.version_group_details[0].move_learn_method.name;\n        url = url.substring(0, url.length - 1);\n        let index = url.indexOf('2');\n        var id = url.substring(index + \"2/move/\".length),\n          rest = url.substring(0, index);\n        if (this.moveListArr.includes(parseInt(id)) && learnMethod === 'level-up') {\n          let objMove = this.dbMoves.filter(data => data.id === parseInt(id));\n          tempArrMoves.push(...objMove);\n        }\n      }\n      let pokemon = {\n        id: myPokemon.id,\n        name: myPokemon.name,\n        stats: getStats(myPokemon.stats),\n        types: getTypes(myPokemon.types),\n        moves: tempArrMoves,\n        front_image: myPokemon.sprites.front_default,\n        back_image: myPokemon.sprites.back_default\n      };\n      console.log(pokemon);\n      tempArr.push(pokemon);\n      if (tempArr.length == 6) {\n        console.log(tempArr);\n        this.myPokemons = tempArr;\n      }\n    }\n  }\n}\nPlayerComponent.ɵfac = function PlayerComponent_Factory(t) {\n  return new (t || PlayerComponent)(i0.ɵɵdirectiveInject(i1.PokemonService), i0.ɵɵdirectiveInject(i2.Pokemon));\n};\nPlayerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PlayerComponent,\n  selectors: [[\"app-player\"]],\n  decls: 0,\n  vars: 0,\n  template: function PlayerComponent_Template(rf, ctx) {},\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});\nexport { PlayerComponent };","map":{"version":3,"names":["getStats","getTypes","PlayerComponent","constructor","http","pokemonService","ngOnInit","pokemon","moveListArr","getPokemonMove","subscribe","move","dbMoves","push","id","name","power","pp","type","accuracy","damageClass","damage_class","priority","hits","min_hits","meta","undefined","max_hits","crit_rate","getRegion","region","copyRegionPokemons","getPokemonRegion","console","log","regionPokemons","chosenPokemon","getPokemon","data","myPokemons","length","toStore","removePokemon","copyMyPokemons","filter","tempArr","myPokemon","tempArrMoves","moves","url","learnMethod","version_group_details","move_learn_method","substring","index","indexOf","rest","includes","parseInt","objMove","stats","types","front_image","sprites","front_default","back_image","back_default","i0","ɵɵdirectiveInject","i1","PokemonService","i2","Pokemon","selectors","decls","vars","template","PlayerComponent_Template","rf","ctx","styles"],"sources":["/Users/joe/Desktop/newProject2023/pkmn-angular/pkmn-angular/src/app/player/player.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { PokemonService } from '../_services/pokemon/pokemon.service';\nimport { PokemonModel, RegionPokemon } from '../model/pokemon-model.model';\nimport { getStats, getMove, getTypes } from '../helper/pokemon-helper';\nimport { Pokemon } from '../helper/pokemon.class';\nimport { MoveModel } from '../model/move-model.model';\n\n\n@Component({\n  selector: 'app-player',\n  templateUrl: './player.component.html',\n  styleUrls: ['./player.component.scss']\n})\nexport class PlayerComponent implements OnInit{\n  constructor(\n    private http: PokemonService,\n    private pokemonService: Pokemon\n  ) { }\n  // myPokemons: PokemonModel[] = []\n  \n  ngOnInit(): void {\n    for (let pokemon of this.moveListArr) {\n      this.http.getPokemonMove(`${pokemon}`).subscribe((move) => {\n        this.dbMoves.push({\n          id: move.id,\n          name: move.name,\n          power: move.power,\n          pp: move.pp,\n          type: move.type.name,\n          accuracy: move.accuracy,\n          damageClass: move.damage_class.name,\n          priority: move.priority,\n          hits: {\n            min_hits: move.meta.min_hits != null? move.meta.min_hits : undefined,\n            max_hits: move.meta.max_hits != null? move.meta.max_hits : undefined\n          },\n          crit_rate: move.meta.crit_rate\n        })\n      })\n    }\n  }\n\n  getRegion(region: string) {\n    let copyRegionPokemons = this.pokemonService.getPokemonRegion(region)\n    console.log(copyRegionPokemons)\n    this.regionPokemons = copyRegionPokemons\n  }\n\n  chosenPokemon(id: string) {\n    this.pokemon = this.http.getPokemon(id).subscribe((data) => {\n      this.pokemon = data\n      this.myPokemons.push(data)\n      if (this.myPokemons.length == 6) {\n        this.toStore()\n       }\n    })\n  }\n\n  removePokemon(id:any) {\n    let copyMyPokemons = this.myPokemons.filter(pokemon => {\n      return pokemon.id != id\n    })\n    this.myPokemons = copyMyPokemons\n  }\n\n  toStore() {\n    let tempArr = []\n    for (const myPokemon of this.myPokemons) {\n    let tempArrMoves: MoveModel[] = []\n      for (const move of myPokemon.moves) {\n        let url = move.move.url\n        let learnMethod = move.version_group_details[0].move_learn_method.name\n        url = url.substring(0, url.length - 1);\n        let index = url.indexOf('2')\n        var id = url.substring(index + \"2/move/\".length), rest = url.substring(0, index);\n\n        if (this.moveListArr.includes(parseInt(id))&&learnMethod ==='level-up') {\n          let objMove = this.dbMoves.filter(data => data.id === parseInt(id))\n          tempArrMoves.push(...objMove)\n        } \n      }\n\n      let pokemon = {\n        id: myPokemon.id,\n        name: myPokemon.name,\n        stats: getStats(myPokemon.stats),\n        types: getTypes(myPokemon.types),\n        moves: tempArrMoves,\n        front_image: myPokemon.sprites.front_default,\n        back_image: myPokemon.sprites.back_default\n      }\n      console.log(pokemon)\n      tempArr.push(pokemon)\n\n      if (tempArr.length == 6) {\n        console.log(tempArr)\n        this.myPokemons = tempArr\n      }\n    }\n  }\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}