{"ast":null,"code":"export const getMove = moves => {\n  let arr = [];\n  for (let move of moves) {\n    let tempObj = {};\n    let moveDetails = move.version_group_details[0];\n    //     if (moveDetails.move_learn_method.name === \"level-up\" &&\n    //         moveDetails.level_learned_at>=15\n    //     )\n    moveDetails.move_learn_method.name === \"level-up\" && moveDetails.level_learned_at >= 15;\n    if (moveDetails.move_learn_method.name === \"level-up\" && moveDetails.level_learned_at >= 15) {\n      tempObj = {\n        id: move.id,\n        name: move.name,\n        power: move.power,\n        pp: move.pp,\n        type: move.type.name,\n        accuracy: move.accuracy,\n        damageClass: move.damage_class.name,\n        priority: move.priority,\n        hits: move.meta ? {\n          max_hits: move.meta.max_hits,\n          min_hits: move.meta.min_hits\n        } : {\n          max_hits: 0,\n          min_hits: 0\n        },\n        crit_rate: move.meta ? move.meta.crit_rate : 0\n      };\n    }\n  }\n  return;\n};\nexport const getStats = stats => {\n  let arr = [];\n  for (let stat of stats) {\n    let tempObj = {};\n    tempObj = {\n      base_stat: stat.base_stat,\n      name: stat.stat.name\n    };\n    arr.push(tempObj);\n  }\n  return arr;\n};\nexport const getTypes = type => {\n  return type.length > 1 ? {\n    typeOne: type[0].type.name,\n    typeTwo: type[1].type.name\n  } : {\n    typeOne: type[0].type.name\n  };\n};","map":{"version":3,"names":["getMove","moves","arr","move","tempObj","moveDetails","version_group_details","move_learn_method","name","level_learned_at","id","power","pp","type","accuracy","damageClass","damage_class","priority","hits","meta","max_hits","min_hits","crit_rate","getStats","stats","stat","base_stat","push","getTypes","length","typeOne","typeTwo"],"sources":["/Users/joe/Desktop/newProject2023/pkmn-angular/pkmn-angular/src/app/helper/pokemon-helper.ts"],"sourcesContent":["export const getMove = (moves: Array<any>) => {\n  let arr = []\n  for (let move of moves) {\n    let tempObj = {}\n\n    let moveDetails = move.version_group_details[0]\n      //     if (moveDetails.move_learn_method.name === \"level-up\" &&\n      //         moveDetails.level_learned_at>=15\n      //     )\n      moveDetails.move_learn_method.name === \"level-up\" && moveDetails.level_learned_at>=15\n\n    if(moveDetails.move_learn_method.name === \"level-up\" && moveDetails.level_learned_at>=15){\n      tempObj = {\n        id: move.id,\n        name: move.name,\n        power: move.power,\n        pp: move.pp,\n        type: move.type.name,\n        accuracy: move.accuracy,\n        damageClass: move.damage_class.name,\n        priority: move.priority,\n        hits: move.meta?{\n          max_hits: move.meta.max_hits,\n          min_hits: move.meta.min_hits\n        } : {\n          max_hits: 0,\n          min_hits: 0\n          },\n        crit_rate: move.meta? move.meta.crit_rate : 0\n      }\n    }\n  }\n  return \n}\n\nexport const getStats = (stats: Array<any>) => {\n  let arr = []\n  for (let stat of stats) {\n    let tempObj = {}\n    tempObj = {\n      base_stat: stat.base_stat,\n      name: stat.stat.name\n    }\n    arr.push(tempObj)\n  }\n  return arr\n}\n\nexport const getTypes = (type: any) => {\n  return type.length > 1 ? {\n    typeOne: type[0].type.name,\n    typeTwo: type[1].type.name\n  } : {\n    typeOne: type[0].type.name\n  }\n}"],"mappings":"AAAA,OAAO,MAAMA,OAAO,GAAIC,KAAiB,IAAI;EAC3C,IAAIC,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIC,IAAI,IAAIF,KAAK,EAAE;IACtB,IAAIG,OAAO,GAAG,EAAE;IAEhB,IAAIC,WAAW,GAAGF,IAAI,CAACG,qBAAqB,CAAC,CAAC,CAAC;IAC7C;IACA;IACA;IACAD,WAAW,CAACE,iBAAiB,CAACC,IAAI,KAAK,UAAU,IAAIH,WAAW,CAACI,gBAAgB,IAAE,EAAE;IAEvF,IAAGJ,WAAW,CAACE,iBAAiB,CAACC,IAAI,KAAK,UAAU,IAAIH,WAAW,CAACI,gBAAgB,IAAE,EAAE,EAAC;MACvFL,OAAO,GAAG;QACRM,EAAE,EAAEP,IAAI,CAACO,EAAE;QACXF,IAAI,EAAEL,IAAI,CAACK,IAAI;QACfG,KAAK,EAAER,IAAI,CAACQ,KAAK;QACjBC,EAAE,EAAET,IAAI,CAACS,EAAE;QACXC,IAAI,EAAEV,IAAI,CAACU,IAAI,CAACL,IAAI;QACpBM,QAAQ,EAAEX,IAAI,CAACW,QAAQ;QACvBC,WAAW,EAAEZ,IAAI,CAACa,YAAY,CAACR,IAAI;QACnCS,QAAQ,EAAEd,IAAI,CAACc,QAAQ;QACvBC,IAAI,EAAEf,IAAI,CAACgB,IAAI,GAAC;UACdC,QAAQ,EAAEjB,IAAI,CAACgB,IAAI,CAACC,QAAQ;UAC5BC,QAAQ,EAAElB,IAAI,CAACgB,IAAI,CAACE;SACrB,GAAG;UACFD,QAAQ,EAAE,CAAC;UACXC,QAAQ,EAAE;SACT;QACHC,SAAS,EAAEnB,IAAI,CAACgB,IAAI,GAAEhB,IAAI,CAACgB,IAAI,CAACG,SAAS,GAAG;OAC7C;;;EAGL;AACF,CAAC;AAED,OAAO,MAAMC,QAAQ,GAAIC,KAAiB,IAAI;EAC5C,IAAItB,GAAG,GAAG,EAAE;EACZ,KAAK,IAAIuB,IAAI,IAAID,KAAK,EAAE;IACtB,IAAIpB,OAAO,GAAG,EAAE;IAChBA,OAAO,GAAG;MACRsB,SAAS,EAAED,IAAI,CAACC,SAAS;MACzBlB,IAAI,EAAEiB,IAAI,CAACA,IAAI,CAACjB;KACjB;IACDN,GAAG,CAACyB,IAAI,CAACvB,OAAO,CAAC;;EAEnB,OAAOF,GAAG;AACZ,CAAC;AAED,OAAO,MAAM0B,QAAQ,GAAIf,IAAS,IAAI;EACpC,OAAOA,IAAI,CAACgB,MAAM,GAAG,CAAC,GAAG;IACvBC,OAAO,EAAEjB,IAAI,CAAC,CAAC,CAAC,CAACA,IAAI,CAACL,IAAI;IAC1BuB,OAAO,EAAElB,IAAI,CAAC,CAAC,CAAC,CAACA,IAAI,CAACL;GACvB,GAAG;IACFsB,OAAO,EAAEjB,IAAI,CAAC,CAAC,CAAC,CAACA,IAAI,CAACL;GACvB;AACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}