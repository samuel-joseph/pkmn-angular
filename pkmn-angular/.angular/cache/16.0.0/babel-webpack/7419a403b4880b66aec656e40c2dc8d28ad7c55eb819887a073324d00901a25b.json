{"ast":null,"code":"import { regionPokemonsImage, region } from \"./region-helper\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/pokemon/pokemon.service\";\nclass Pokemon {\n  constructor(restApi) {\n    this.restApi = restApi;\n    this.regionPokemons = [];\n  }\n  getPokemonRegion(request) {\n    let regionSpecific = '';\n    switch (request) {\n      case 'kanto':\n        regionSpecific = 'kanto';\n        break;\n      case 'johto':\n        regionSpecific = 'johto';\n        break;\n      case 'hoenn':\n        regionSpecific = 'hoenn';\n        break;\n    }\n    console.log(Object.keys(reg));\n    const firstPokemon = region['kanto'].firstPokemon;\n    const lastPokemon = region['kanto'].lastPokemon;\n    for (let i = firstPokemon; i <= lastPokemon; i++) {\n      this.regionPokemons.push(regionPokemonsImage(`${i}`));\n    }\n    console.log(this.regionPokemons);\n    return this.regionPokemons;\n  }\n  getPokemonDetails(id) {\n    this.restApi.getPokemonMove(id).subscribe(res => {\n      this.pokemon = res;\n    });\n    // console.log(this.http.getPokemon(id))\n    // this.restApi.getPokemon(id).subscribe(data => {\n    //   let tempMove: any[] = []\n    //   let tempArr = []\n    //   // move to a separate method\n    //   for (const moveIndex of data.moves) {\n    //     let moveDetails = moveIndex.version_group_details[0]\n    //     if (moveDetails.move_learn_method.name === \"level-up\" &&\n    //         moveDetails.level_learned_at>=15\n    //     )\n    //       this.restApi.getPokemonMove(`${moveIndex.move.url}`).subscribe(move => {\n    //         let tempObj = getMove(move)\n    //         if(tempObj.power){\n    //           tempMove.push(tempObj)\n    //         }\n    //       })\n    //   }\n    //   for (let i = 0; i < 6; i++){\n    //     let tempObj = getStats(data.stats[i])\n    //     tempArr.push(tempObj)\n    //   }\n    //   //move to a separate method\n    //   this.pokemon = {\n    //     id: data.id,\n    //     name: data.name,\n    //     stats: tempArr,\n    //     types: getTypes(data.types),\n    //     moves: tempMove,\n    //     front_image: data.sprites.front_default,\n    //     back_image: data.sprites.back_default\n    //   }\n    //   console.log(\"AM I HERE\" ,this.pokemon)\n    //     return this.pokemon\n    // })\n  }\n}\n\nPokemon.ɵfac = function Pokemon_Factory(t) {\n  return new (t || Pokemon)(i0.ɵɵinject(i1.PokemonService));\n};\nPokemon.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Pokemon,\n  factory: Pokemon.ɵfac,\n  providedIn: 'root'\n});\nexport { Pokemon };","map":{"version":3,"names":["regionPokemonsImage","region","Pokemon","constructor","restApi","regionPokemons","getPokemonRegion","request","regionSpecific","console","log","Object","keys","reg","firstPokemon","lastPokemon","i","push","getPokemonDetails","id","getPokemonMove","subscribe","res","pokemon","i0","ɵɵinject","i1","PokemonService","factory","ɵfac","providedIn"],"sources":["/Users/joe/Desktop/newProject2023/pkmn-angular/pkmn-angular/src/app/helper/pokemon.class.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport { PokemonService } from \"../_services/pokemon/pokemon.service\"\nimport { PokemonModel, RegionPokemon } from \"../model/pokemon-model.model\"\nimport { Observable, switchMap } from 'rxjs';\nimport { getMove, getStats, getTypes\n} from \"./pokemon-helper\"\nimport { regionPokemonsImage, region } from \"./region-helper\"\n \n\n @Injectable({ providedIn: 'root' })\n export class Pokemon {\n   pokemon: any;\n  regionPokemons: RegionPokemon[] = [];\n   constructor(private restApi: PokemonService) { }\n\n   getPokemonRegion(request: any): any{\n     let regionSpecific = ''\n     switch (request) {\n       case 'kanto':\n         regionSpecific = 'kanto'\n         break\n       case 'johto':\n         regionSpecific = 'johto'\n         break\n       case 'hoenn':\n         regionSpecific = 'hoenn'\n         break\n     }\n     console.log(Object.keys(reg))\n     const firstPokemon = region['kanto'].firstPokemon\n     const lastPokemon = region['kanto'].lastPokemon\n     for (let i = firstPokemon; i <= lastPokemon; i++){\n       this.regionPokemons.push(regionPokemonsImage(`${i}`))\n     }\n     console.log(this.regionPokemons)\n     return this.regionPokemons\n   }\n   \n   getPokemonDetails(id: string) {\n     this.restApi.getPokemonMove(id).subscribe((res) => {\n       this.pokemon = res\n     })\n    // console.log(this.http.getPokemon(id))\n      // this.restApi.getPokemon(id).subscribe(data => {\n      //   let tempMove: any[] = []\n      //   let tempArr = []\n    \n      //   // move to a separate method\n      //   for (const moveIndex of data.moves) {\n      //     let moveDetails = moveIndex.version_group_details[0]\n      //     if (moveDetails.move_learn_method.name === \"level-up\" &&\n      //         moveDetails.level_learned_at>=15\n      //     )\n      //       this.restApi.getPokemonMove(`${moveIndex.move.url}`).subscribe(move => {\n      //         let tempObj = getMove(move)\n      //         if(tempObj.power){\n      //           tempMove.push(tempObj)\n      //         }\n      //       })\n      //   }\n\n      //   for (let i = 0; i < 6; i++){\n      //     let tempObj = getStats(data.stats[i])\n      //     tempArr.push(tempObj)\n      //   }\n      //   //move to a separate method\n      //   this.pokemon = {\n      //     id: data.id,\n      //     name: data.name,\n      //     stats: tempArr,\n      //     types: getTypes(data.types),\n      //     moves: tempMove,\n      //     front_image: data.sprites.front_default,\n      //     back_image: data.sprites.back_default\n      //   }\n      //   console.log(\"AM I HERE\" ,this.pokemon)\n      //     return this.pokemon\n      // })\n  }\n}\n"],"mappings":"AAMA,SAASA,mBAAmB,EAAEC,MAAM,QAAQ,iBAAiB;;;AAG5D,MACaC,OAAO;EAGlBC,YAAoBC,OAAuB;IAAvB,KAAAA,OAAO,GAAPA,OAAO;IAD5B,KAAAC,cAAc,GAAoB,EAAE;EACY;EAE/CC,gBAAgBA,CAACC,OAAY;IAC3B,IAAIC,cAAc,GAAG,EAAE;IACvB,QAAQD,OAAO;MACb,KAAK,OAAO;QACVC,cAAc,GAAG,OAAO;QACxB;MACF,KAAK,OAAO;QACVA,cAAc,GAAG,OAAO;QACxB;MACF,KAAK,OAAO;QACVA,cAAc,GAAG,OAAO;QACxB;IAAK;IAETC,OAAO,CAACC,GAAG,CAACC,MAAM,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC;IAC7B,MAAMC,YAAY,GAAGb,MAAM,CAAC,OAAO,CAAC,CAACa,YAAY;IACjD,MAAMC,WAAW,GAAGd,MAAM,CAAC,OAAO,CAAC,CAACc,WAAW;IAC/C,KAAK,IAAIC,CAAC,GAAGF,YAAY,EAAEE,CAAC,IAAID,WAAW,EAAEC,CAAC,EAAE,EAAC;MAC/C,IAAI,CAACX,cAAc,CAACY,IAAI,CAACjB,mBAAmB,CAAC,GAAGgB,CAAC,EAAE,CAAC,CAAC;;IAEvDP,OAAO,CAACC,GAAG,CAAC,IAAI,CAACL,cAAc,CAAC;IAChC,OAAO,IAAI,CAACA,cAAc;EAC5B;EAEAa,iBAAiBA,CAACC,EAAU;IAC1B,IAAI,CAACf,OAAO,CAACgB,cAAc,CAACD,EAAE,CAAC,CAACE,SAAS,CAAEC,GAAG,IAAI;MAChD,IAAI,CAACC,OAAO,GAAGD,GAAG;IACpB,CAAC,CAAC;IACH;IACE;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACJ;;;AApEYpB,OAAO,C;mBAAPA,OAAO,EAAAsB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAPzB,OAAO,C;SAAPA,OAAO;EAAA0B,OAAA,EAAP1B,OAAO,CAAA2B,IAAA;EAAAC,UAAA,EADM;AAAM;SACnB5B,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}