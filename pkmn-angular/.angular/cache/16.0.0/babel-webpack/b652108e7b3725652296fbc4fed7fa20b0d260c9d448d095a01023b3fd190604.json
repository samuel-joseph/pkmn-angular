{"ast":null,"code":"import { getMove, getStats, getTypes } from \"./pokemon-helper\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../_services/pokemon/pokemon.service\";\nclass Pokemon {\n  constructor(http) {\n    this.http = http;\n    this.regionPokemons = [];\n  }\n  getPokemonDetails(id) {\n    this.http.getPokemon(id).subscribe(data => {\n      let tempMove = [];\n      let tempArr = [];\n      pokemon:\n      // move to a separate method\n      for (const moveIndex of data.moves) {\n        let moveDetails = moveIndex.version_group_details[0];\n        if (moveDetails.move_learn_method.name === \"level-up\" && moveDetails.level_learned_at >= 15) this.http.getPokemonMove(`${moveIndex.move.url}`).subscribe(move => {\n          let tempObj = getMove(move);\n          if (tempObj.power) {\n            tempMove.push(tempObj);\n          }\n        });\n      }\n      for (let i = 0; i < 6; i++) {\n        let tempObj = getStats(data.stats[i]);\n        tempArr.push(tempObj);\n      }\n      //move to a separate method\n      const pokemon = {\n        id: data.id,\n        name: data.name,\n        stats: tempArr,\n        types: getTypes(data.types),\n        moves: tempMove,\n        front_image: data.sprites.front_default,\n        back_image: data.sprites.back_default\n      };\n      this.regionPokemons.push(pokemon);\n    });\n    console.log(this.regionPokemons);\n  }\n}\nPokemon.ɵfac = function Pokemon_Factory(t) {\n  return new (t || Pokemon)(i0.ɵɵinject(i1.PokemonService));\n};\nPokemon.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: Pokemon,\n  factory: Pokemon.ɵfac,\n  providedIn: 'root'\n});\nexport { Pokemon };","map":{"version":3,"names":["getMove","getStats","getTypes","Pokemon","constructor","http","regionPokemons","getPokemonDetails","id","getPokemon","subscribe","data","tempMove","tempArr","pokemon","moveIndex","moves","moveDetails","version_group_details","move_learn_method","name","level_learned_at","getPokemonMove","move","url","tempObj","power","push","i","stats","types","front_image","sprites","front_default","back_image","back_default","console","log","i0","ɵɵinject","i1","PokemonService","factory","ɵfac","providedIn"],"sources":["/Users/joe/Desktop/newProject2023/pkmn-angular/pkmn-angular/src/app/helper/pokemon.class.ts"],"sourcesContent":["import { Injectable } from \"@angular/core\"\nimport { PokemonService } from \"../_services/pokemon/pokemon.service\"\nimport { PokemonModel } from \"../model/pokemon-model.model\"\nimport { getMove, getStats, getTypes\n } from \"./pokemon-helper\"\n \n\n @Injectable({ providedIn: 'root' })\nexport class Pokemon {\n  regionPokemons= []\n  constructor(private http: PokemonService){}\n   getPokemonDetails(id: string): void {\n      this.http.getPokemon(id).subscribe(data => {\n\n      let tempMove: any[] = []\n      let tempArr = []\n      pokemon: \n\n      // move to a separate method\n      for (const moveIndex of data.moves) {\n        let moveDetails = moveIndex.version_group_details[0]\n        if (moveDetails.move_learn_method.name === \"level-up\" &&\n            moveDetails.level_learned_at>=15\n        )\n          this.http.getPokemonMove(`${moveIndex.move.url}`).subscribe(move => {\n            let tempObj = getMove(move)\n            if(tempObj.power){\n              tempMove.push(tempObj)\n            }\n          })\n      }\n\n      for (let i = 0; i < 6; i++){\n        let tempObj = getStats(data.stats[i])\n        tempArr.push(tempObj)\n      }\n      //move to a separate method\n      const pokemon = {\n        id: data.id,\n        name: data.name,\n        stats: tempArr,\n        types: getTypes(data.types),\n        moves: tempMove,\n        front_image: data.sprites.front_default,\n        back_image: data.sprites.back_default\n      }\n      this.regionPokemons.push(pokemon)\n      })\n     console.log(this.regionPokemons)\n  }\n}\n"],"mappings":"AAGA,SAASA,OAAO,EAAEC,QAAQ,EAAEC,QAAQ,QAC5B,kBAAkB;;;AAGzB,MACYC,OAAO;EAElBC,YAAoBC,IAAoB;IAApB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,cAAc,GAAE,EAAE;EACwB;EACzCC,iBAAiBA,CAACC,EAAU;IACzB,IAAI,CAACH,IAAI,CAACI,UAAU,CAACD,EAAE,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;MAE1C,IAAIC,QAAQ,GAAU,EAAE;MACxB,IAAIC,OAAO,GAAG,EAAE;MAChBC,OAAO;MAEP;MACA,KAAK,MAAMC,SAAS,IAAIJ,IAAI,CAACK,KAAK,EAAE;QAClC,IAAIC,WAAW,GAAGF,SAAS,CAACG,qBAAqB,CAAC,CAAC,CAAC;QACpD,IAAID,WAAW,CAACE,iBAAiB,CAACC,IAAI,KAAK,UAAU,IACjDH,WAAW,CAACI,gBAAgB,IAAE,EAAE,EAElC,IAAI,CAAChB,IAAI,CAACiB,cAAc,CAAC,GAAGP,SAAS,CAACQ,IAAI,CAACC,GAAG,EAAE,CAAC,CAACd,SAAS,CAACa,IAAI,IAAG;UACjE,IAAIE,OAAO,GAAGzB,OAAO,CAACuB,IAAI,CAAC;UAC3B,IAAGE,OAAO,CAACC,KAAK,EAAC;YACfd,QAAQ,CAACe,IAAI,CAACF,OAAO,CAAC;;QAE1B,CAAC,CAAC;;MAGN,KAAK,IAAIG,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;QACzB,IAAIH,OAAO,GAAGxB,QAAQ,CAACU,IAAI,CAACkB,KAAK,CAACD,CAAC,CAAC,CAAC;QACrCf,OAAO,CAACc,IAAI,CAACF,OAAO,CAAC;;MAEvB;MACA,MAAMX,OAAO,GAAG;QACdN,EAAE,EAAEG,IAAI,CAACH,EAAE;QACXY,IAAI,EAAET,IAAI,CAACS,IAAI;QACfS,KAAK,EAAEhB,OAAO;QACdiB,KAAK,EAAE5B,QAAQ,CAACS,IAAI,CAACmB,KAAK,CAAC;QAC3Bd,KAAK,EAAEJ,QAAQ;QACfmB,WAAW,EAAEpB,IAAI,CAACqB,OAAO,CAACC,aAAa;QACvCC,UAAU,EAAEvB,IAAI,CAACqB,OAAO,CAACG;OAC1B;MACD,IAAI,CAAC7B,cAAc,CAACqB,IAAI,CAACb,OAAO,CAAC;IACjC,CAAC,CAAC;IACHsB,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC/B,cAAc,CAAC;EACnC;;AAzCWH,OAAO,C;mBAAPA,OAAO,EAAAmC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,cAAA;AAAA;AAAPtC,OAAO,C;SAAPA,OAAO;EAAAuC,OAAA,EAAPvC,OAAO,CAAAwC,IAAA;EAAAC,UAAA,EADO;AAAM;SACpBzC,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}