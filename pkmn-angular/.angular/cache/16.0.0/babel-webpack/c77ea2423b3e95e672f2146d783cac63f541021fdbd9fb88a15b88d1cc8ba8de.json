{"ast":null,"code":"import { PokemonModel } from '../';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst POKEMON_API = 'https://pokeapi.co/api/v2/pokemon/';\nconst kanto = 151;\nclass PokemonService {\n  constructor(http) {\n    this.http = http;\n  }\n  getPokemon(id) {\n    return this.http.get(`${POKEMON_API}${id}`);\n  }\n  getPokemonMove(MOVE_API) {\n    pokemon: PokemonModel;\n    return this.http.get(`${MOVE_API}`).subscribe(data => {\n      let tempMove = [];\n      let tempArr = [];\n      // move to a separate method\n      for (const moveIndex of data.moves) {\n        let moveDetails = moveIndex.version_group_details[0];\n        if (moveDetails.move_learn_method.name === \"level-up\" && moveDetails.level_learned_at >= 15) this.http.getPokemonMove(`${moveIndex.move.url}`).subscribe(move => {\n          let tempObj = getMove(move);\n          if (tempObj.power) {\n            tempMove.push(tempObj);\n          }\n        });\n      }\n      for (let i = 0; i < 6; i++) {\n        let tempObj = getStats(data.stats[i]);\n        tempArr.push(tempObj);\n      }\n      //move to a separate method\n      const temp = {\n        id: data.id,\n        name: data.name,\n        stats: tempArr,\n        types: getTypes(data.types),\n        moves: tempMove,\n        front_image: data.sprites.front_default,\n        back_image: data.sprites.back_default\n      };\n      this.myPokemon = temp;\n      console.log(temp);\n    });\n  }\n}\nPokemonService.ɵfac = function PokemonService_Factory(t) {\n  return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n};\nPokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PokemonService,\n  factory: PokemonService.ɵfac,\n  providedIn: 'root'\n});\nexport { PokemonService };","map":{"version":3,"names":["PokemonModel","POKEMON_API","kanto","PokemonService","constructor","http","getPokemon","id","get","getPokemonMove","MOVE_API","pokemon","subscribe","data","tempMove","tempArr","moveIndex","moves","moveDetails","version_group_details","move_learn_method","name","level_learned_at","move","url","tempObj","getMove","power","push","i","getStats","stats","temp","types","getTypes","front_image","sprites","front_default","back_image","back_default","myPokemon","console","log","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/joe/Desktop/newProject2023/pkmn-angular/pkmn-angular/src/app/_services/pokemon/pokemon.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { PokemonModel } from '../';\n\nconst POKEMON_API = 'https://pokeapi.co/api/v2/pokemon/';\nconst kanto = 151\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PokemonService {\n\n  constructor(private http: HttpClient) { }\n\n  getPokemon(id: string): Observable<any>{\n    return this.http.get(`${POKEMON_API}${id}`)\n  }\n\n  getPokemonMove(MOVE_API: string): Observable<any>{\n    pokemon: PokemonModel\n    return this.http.get(`${MOVE_API}`).subscribe(data => {\n      let tempMove: any[] = []\n        let tempArr = []\n  \n        // move to a separate method\n        for (const moveIndex of data.moves) {\n          let moveDetails = moveIndex.version_group_details[0]\n          if (moveDetails.move_learn_method.name === \"level-up\" &&\n              moveDetails.level_learned_at>=15\n          )\n            this.http.getPokemonMove(`${moveIndex.move.url}`).subscribe(move => {\n              let tempObj = getMove(move)\n              if(tempObj.power){\n                tempMove.push(tempObj)\n              }\n            })\n        }\n  \n        for (let i = 0; i < 6; i++){\n          let tempObj = getStats(data.stats[i])\n          tempArr.push(tempObj)\n        }\n        //move to a separate method\n        const temp = {\n          id: data.id,\n          name: data.name,\n          stats: tempArr,\n          types: getTypes(data.types),\n          moves: tempMove,\n          front_image: data.sprites.front_default,\n          back_image: data.sprites.back_default\n        }\n        this.myPokemon = temp\n        console.log(temp)\n    })\n  }\n}\n"],"mappings":"AAGA,SAASA,YAAY,QAAQ,KAAK;;;AAElC,MAAMC,WAAW,GAAG,oCAAoC;AACxD,MAAMC,KAAK,GAAG,GAAG;AAEjB,MAGaC,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCC,UAAUA,CAACC,EAAU;IACnB,OAAO,IAAI,CAACF,IAAI,CAACG,GAAG,CAAC,GAAGP,WAAW,GAAGM,EAAE,EAAE,CAAC;EAC7C;EAEAE,cAAcA,CAACC,QAAgB;IAC7BC,OAAO,EAAEX,YAAY;IACrB,OAAO,IAAI,CAACK,IAAI,CAACG,GAAG,CAAC,GAAGE,QAAQ,EAAE,CAAC,CAACE,SAAS,CAACC,IAAI,IAAG;MACnD,IAAIC,QAAQ,GAAU,EAAE;MACtB,IAAIC,OAAO,GAAG,EAAE;MAEhB;MACA,KAAK,MAAMC,SAAS,IAAIH,IAAI,CAACI,KAAK,EAAE;QAClC,IAAIC,WAAW,GAAGF,SAAS,CAACG,qBAAqB,CAAC,CAAC,CAAC;QACpD,IAAID,WAAW,CAACE,iBAAiB,CAACC,IAAI,KAAK,UAAU,IACjDH,WAAW,CAACI,gBAAgB,IAAE,EAAE,EAElC,IAAI,CAACjB,IAAI,CAACI,cAAc,CAAC,GAAGO,SAAS,CAACO,IAAI,CAACC,GAAG,EAAE,CAAC,CAACZ,SAAS,CAACW,IAAI,IAAG;UACjE,IAAIE,OAAO,GAAGC,OAAO,CAACH,IAAI,CAAC;UAC3B,IAAGE,OAAO,CAACE,KAAK,EAAC;YACfb,QAAQ,CAACc,IAAI,CAACH,OAAO,CAAC;;QAE1B,CAAC,CAAC;;MAGN,KAAK,IAAII,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;QACzB,IAAIJ,OAAO,GAAGK,QAAQ,CAACjB,IAAI,CAACkB,KAAK,CAACF,CAAC,CAAC,CAAC;QACrCd,OAAO,CAACa,IAAI,CAACH,OAAO,CAAC;;MAEvB;MACA,MAAMO,IAAI,GAAG;QACXzB,EAAE,EAAEM,IAAI,CAACN,EAAE;QACXc,IAAI,EAAER,IAAI,CAACQ,IAAI;QACfU,KAAK,EAAEhB,OAAO;QACdkB,KAAK,EAAEC,QAAQ,CAACrB,IAAI,CAACoB,KAAK,CAAC;QAC3BhB,KAAK,EAAEH,QAAQ;QACfqB,WAAW,EAAEtB,IAAI,CAACuB,OAAO,CAACC,aAAa;QACvCC,UAAU,EAAEzB,IAAI,CAACuB,OAAO,CAACG;OAC1B;MACD,IAAI,CAACC,SAAS,GAAGR,IAAI;MACrBS,OAAO,CAACC,GAAG,CAACV,IAAI,CAAC;IACrB,CAAC,CAAC;EACJ;;AA7CW7B,cAAc,C;mBAAdA,cAAc,EAAAwC,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAd3C,cAAc,C;SAAdA,cAAc;EAAA4C,OAAA,EAAd5C,cAAc,CAAA6C,IAAA;EAAAC,UAAA,EAFb;AAAM;SAEP9C,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}